/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/kubeflow/caffe2-operator/pkg/apis/caffe2/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// Caffe2JobLister helps list Caffe2Jobs.
type Caffe2JobLister interface {
	// List lists all Caffe2Jobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Caffe2Job, err error)
	// Caffe2Jobs returns an object that can list and get Caffe2Jobs.
	Caffe2Jobs(namespace string) Caffe2JobNamespaceLister
	Caffe2JobListerExpansion
}

// caffe2JobLister implements the Caffe2JobLister interface.
type caffe2JobLister struct {
	indexer cache.Indexer
}

// NewCaffe2JobLister returns a new Caffe2JobLister.
func NewCaffe2JobLister(indexer cache.Indexer) Caffe2JobLister {
	return &caffe2JobLister{indexer: indexer}
}

// List lists all Caffe2Jobs in the indexer.
func (s *caffe2JobLister) List(selector labels.Selector) (ret []*v1alpha1.Caffe2Job, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Caffe2Job))
	})
	return ret, err
}

// Caffe2Jobs returns an object that can list and get Caffe2Jobs.
func (s *caffe2JobLister) Caffe2Jobs(namespace string) Caffe2JobNamespaceLister {
	return caffe2JobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// Caffe2JobNamespaceLister helps list and get Caffe2Jobs.
type Caffe2JobNamespaceLister interface {
	// List lists all Caffe2Jobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Caffe2Job, err error)
	// Get retrieves the Caffe2Job from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Caffe2Job, error)
	Caffe2JobNamespaceListerExpansion
}

// caffe2JobNamespaceLister implements the Caffe2JobNamespaceLister
// interface.
type caffe2JobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Caffe2Jobs in the indexer for a given namespace.
func (s caffe2JobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Caffe2Job, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Caffe2Job))
	})
	return ret, err
}

// Get retrieves the Caffe2Job from the indexer for a given namespace and name.
func (s caffe2JobNamespaceLister) Get(name string) (*v1alpha1.Caffe2Job, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("caffe2job"), name)
	}
	return obj.(*v1alpha1.Caffe2Job), nil
}
